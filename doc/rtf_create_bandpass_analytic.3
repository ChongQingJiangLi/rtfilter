.\"Copyright 2010 (c) EPFL
.TH RTF_CREATE_BANDPASS_ANALYTIC 3 2010 "EPFL" "rtfilter library"
.SH NAME
rtf_create_bandpass_analytic - Creates an IIR filter estimating the analytic
signal in a bandpass.
.SH SYNOPSIS
.LP
.B #include <rtf_common.h>
.sp
.BI "hfilter rtf_create_bandpass_analytic(unsigned int " nch ", int " proctype ","
.br
.BI "                                     double " fl ", double " fh ","
.br
.BI "                                     unsigned int " num_pole ");"
.br
.SH DESCRIPTION
.LP
\fBrtf_create_chebychev\fP() creates a IIR chebychev filter processing
\fInch\fP channels of data type specified by \fIproctype\fP. The output of
the filter is the analytic signal of the bandpassed data between the
normalized frequencies \fIfl\fP and \fIfh\fP. The \fInum_pole\fP parameter
specifies the number of poles of the Chebychev filter used as the basis of
the analytic filter.
.LP
A normalized frequency is the ratio between the absolute frequency and the
sampling frequency (i.e. a value of 1.0 refers to the sampling frequency).
.LP
The Z-transform of this filter has complex coefficients. So like
\fBrtf_create_filter\fP(3) the created filter will output complex values
keeping the precision specified by \fIproctype\fP.
.LP
It is important to note that this filter can quickly become unstable as the
number of pole specified increased. Please refers to the authors of the
library to know the stability domain
(TODO: provides the stability domain here)
.SH "RETURN VALUE"
.LP
Returns the handle to the created filter in case of success, NULL otherwise.
.SH "SEE ALSO"
.BR rtf_create_filter (3),
.BR rtf_destroy_filter (3)



